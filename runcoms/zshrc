#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...

## Local overrides

if [ -e ~/.zlocal ]; then
  source ~/.zlocal
fi

# Conscript
export CONSCRIPT_HOME="$HOME/.conscript"
export CONSCRIPT_OPTS="-XX:MaxPermSize=512M -Dfile.encoding=UTF-8"

# General path setup
path=(
  "/usr/local/bin"
  "$HOME/bin" 
  "$HOME/.cabal/bin" 
  "$HOME/.local/bin"  
  "$HOME/.rvm/bin"
  "$CONSCRIPT_HOME/bin"
  "$PYTHON_HOME/bin"
  "${GOPATH:-$HOME/go}/bin"
  $path
)

if [ -f "$(which cs)" ]; then
  path=(
    "$HOME/Library/Application Support/Coursier/bin"
    $path
  )
fi

if [ -f "$(which nvim)" ]; then
  export EDITOR=nvim
  alias vim=nvim
else
  export EDITOR=vim
fi

# 1Password
if [ -e ~/.config/op/plugins.sh ]; then
  source ~/.config/op/plugins.sh
fi

# iTerm2
if [ -e ~/.iterm2_shell_integration.zsh ]; then
  source ~/.iterm2_shell_integration.zsh
  path=("$HOME/.iterm2" $path)
fi

# nvm
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# Powerline
if [ -f "$(which powerline-daemon)" ]; then
  powerline-daemon -q
  source "$PYTHON_HOME/lib/python/site-packages/powerline/bindings/zsh/powerline.zsh"
fi

# If `hub` is installed, alias it
if [ -f "$(which hub)" ]; then
  eval "$(hub alias -s)"
fi

## Aliases

# Print whatever's in the pasteboard expanding escape codes.
# Useful for making stack traces from JSON-encoded logs readable.
alias pbprintf='printf "$(pbp)"'

alias jqcat="jq -Rr --unbuffered 'fromjson? // .'"

# I don't like the prezto super-safe rm
if alias rm >&-; then
  unalias rm
fi

# Always run `find` with real regex support
# Maintain the "ignore globs" functionality, which I think makes writing searches easier.
alias find="noglob find -E"

## asdf


if [ -e "/usr/local/opt/asdf/libexec/asdf.sh" ]; then
  . /usr/local/opt/asdf/libexec/asdf.sh
elif [ -e "/usr/local/opt/asdf/asdf.sh" ]; then
  . /usr/local/opt/asdf/asdf.sh
elif [ -e "/opt/homebrew/opt/asdf/libexec/asdf.sh" ]; then
  . /opt/homebrew/opt/asdf/libexec/asdf.sh
fi

## sdkman

export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"

## virtualenv

if [ -e "$(which virtualenv)" ]; then
  source "$PYTHON_HOME/bin/virtualenvwrapper.sh"
fi

## direnv

if [ -e "$(which direnv)" ]; then
  eval "$(direnv hook zsh)"
fi

## fzf

if [ -f ~/.fzf.zsh ]; then
  source ~/.fzf.zsh
  # Use bat to preview file while searching with fzf
  export FZF_CTRL_T_OPTS="--preview 'bat -n --color=always {}' --bind 'shift-up:preview-page-up,shift-down:preview-page-down,ctrl-/:change-preview-window(down|hidden|)'"
fi

## rbenv

if [ -e "$(which rbenv)" ]; then
  eval "$(rbenv init -)"
fi

## nodenv

if [ -e "$(which nodenv)" ]; then
  eval "$(nodenv init -)"
fi

## graphite.dev completions

if [ -e "$(which gt)" ]; then
  eval "$(gt completion -)"
fi

## rtx

if [ -e "$(which rtx)" ]; then
  eval "$(rtx activate zsh)"
fi

## brew completions

if type brew &>/dev/null; then
  fpath=(
    "$(brew --prefix)/share/zsh/site-functions"
    "$HOME/.local/share/zsh/functions"
    $fpath
  )

  autoload -Uz compinit
  compinit

  autoload bashcompinit
  bashcompinit
fi
